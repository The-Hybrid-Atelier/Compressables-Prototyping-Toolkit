/ IoT Server

.ui.centered.grid
  .ten.wide.column
    #risk-assessment.ui.form.panel
      #control-panel.ui.attached.top.inverted.segment
        .ui.header.inverted 
          SERVER CONTROL PANEL
          .sub.header#url
      .ui.segment.attached#server-control
        %form.ui.form.server-control
          .three.fields
            .field
              %label CLOUD
              .ui.labeled.input
                .ui.label ws://   
                %input.param{type:"text", name:"host", value:"162.243.120.86"}
            .field
              %label PORT
              %input.param{type:"number", name:"port", value: 443}
            .field
              %label &nbsp;
              %button.connect.blue.ui.button.fluid{type:"submit"}
                CONNECT
        %form.ui.form.server-control
          .three.fields
            .field
              %label LAB SERVER
              .ui.labeled.input
                .ui.label ws://   
                %input.param{type:"text", name:"host", value:"192.168.1.5"}
            .field
              %label PORT
              %input.param{type:"number", name:"port", value: 3001}
            .field
              %label &nbsp;
              %button.connect.blue.ui.button.fluid{type:"submit"}
                CONNECT
        %form.ui.form.server-control
          .three.fields
            .field
              %label HOME SERVER
              .ui.labeled.input
                .ui.label ws://   
                %input.param{type:"text", name:"host", value:"192.168.1.221"}
            .field
              %label PORT
              %input.param{type:"number", name:"port", value: 3001}
            .field
              %label &nbsp;
              %button.connect.blue.ui.button.fluid{type:"submit"}
                CONNECT
        
        
      .ui.segment.attached.bottom
        .ui.large.buttons
          %button.ui.button.api.disabled{data: {command: "SERVER_STATE"}}
            SERVER_STATE

      .ui.segment.attached
        #editor.editor
            

          
:coffeescript
  window.NAME = "server-control"
  window.VERSION = "1.0"
  $ -> 
    # CONNECT TO A WEBSOCKET SERVER
    $(".server-control").on "submit", (event)->
      $("button.connect").addClass('loading')
      sa = $(this).serializeArray()
      data = _.map sa, (element)-> [element.name, element.value]
      data = _.object(data)
      window.socket = start_socket(data.host, data.port)
      event.preventDefault();

    window.editor = ace.edit("editor");
    editor.setTheme("ace/theme/twilight")
    JavaScriptMode = ace.require("ace/mode/javascript").Mode
    editor.session.setMode(new JavaScriptMode())
    editor.setValue("// Server Response Log\n")


    
  

:scss
  .panel{
    margin-top: 60px;
  }