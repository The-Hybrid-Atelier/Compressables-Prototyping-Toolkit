/ IoT Server

.ui.centered.grid
  .ten.wide.column
    #risk-assessment.ui.form.panel
      #control-panel.ui.attached.top.inverted.segment
        .ui.header.inverted 
          SERVER CONTROL PANEL
          .sub.header#url
      .ui.segment.attached#server-control

        %form.ui.form.server-control
          .three.fields
            .field
              %label LAB SERVER
              .ui.labeled.input
                .ui.label ws://   
                %input.param{type:"text", name:"host", value:"192.168.1.4"}
            .field
              %label PORT
              %input.param{type:"number", name:"port", value: 3001}
            .field
              %label &nbsp;
              %button.connect.blue.ui.button.fluid{type:"submit"}
                CONNECT
      
        
        
      .ui.segment.attached.bottom
        .ui.buttons.vertical.massive
          %button.ui.button.yellow.up UP
          %h2.setpoint 130
          %button.ui.button.green.down DOWN
        .ui.buttons.vertical.massive
          %button.ui.button.red.emergency_stop EMERGENCY_STOP
          %button.ui.button.default.restart RESTART  

          
:coffeescript
  window.NAME = "interaction-app"
  window.VERSION = "1.0"
  $ -> 
    # CONNECT TO A WEBSOCKET SERVER
    $(".server-control").on "submit", (event)->
      $("button.connect").addClass('loading')
      sa = $(this).serializeArray()
      data = _.map sa, (element)-> [element.name, element.value]
      data = _.object(data)
      window.socket = start_socket(data.host, data.port)
      event.preventDefault();

  setpoint = 130
  $(".up").on "click", ()->
    setpoint += 1
    $(".setpoint").html(setpoint)
    socket.jsend({"event": "pid", "action": "set_setpoint", "value": setpoint})
    console.log "SETPOINT", setpoint, "+1"
  $(".down").on "click", ()->
    setpoint -= 1
    $(".setpoint").html(setpoint)
    socket.jsend({"event": "pid", "action": "set_setpoint", "value": setpoint})
    console.log "SETPOINT", setpoint, "-1"
  $('.restart').on "click", ()->
    socket.jsend({"event": "pid", "action": "restart"})
  $('.emergency_stop').on "click", ()->
    socket.jsend({"event": "pid", "action": "emergency_stop"})
    



    
  

:scss
  .panel{
    margin-top: 60px;
  }